<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.0">
  <compounddef id="listkeeper_8hpp" kind="file">
    <compoundname>listkeeper.hpp</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">boost/algorithm/string.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes refid="datalist_8hpp" local="yes">datalist.hpp</includes>
    <includes refid="gameinfo_8hpp" local="yes">gameinfo.hpp</includes>
    <includedby refid="tiggit_8cpp" local="yes">tiggit.cpp</includedby>
    <incdepgraph>
      <node id="698">
        <label>config.h</label>
        <link refid="config_8h_source"/>
      </node>
      <node id="689">
        <label>jobqueue.hpp</label>
        <link refid="jobqueue_8hpp_source"/>
        <childnode refid="683" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
      </node>
      <node id="665">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="686">
        <label>queue</label>
      </node>
      <node id="672">
        <label>filegetter.hpp</label>
        <link refid="filegetter_8hpp_source"/>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
      </node>
      <node id="706">
        <label>config.hpp</label>
        <link refid="config_8hpp_source"/>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="695" relation="include">
        </childnode>
      </node>
      <node id="679">
        <label>assert.h</label>
      </node>
      <node id="699">
        <label>value.h</label>
        <link refid="value_8h_source"/>
        <childnode refid="700" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="694" relation="include">
        </childnode>
      </node>
      <node id="692">
        <label>json_rated.hpp</label>
        <link refid="json__rated_8hpp_source"/>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
        <childnode refid="694" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="695" relation="include">
        </childnode>
      </node>
      <node id="700">
        <label>forwards.h</label>
        <link refid="forwards_8h_source"/>
        <childnode refid="698" relation="include">
        </childnode>
      </node>
      <node id="669">
        <label>stdint.h</label>
      </node>
      <node id="673">
        <label>stdlib.h</label>
      </node>
      <node id="691">
        <label>wx/image.h</label>
      </node>
      <node id="674">
        <label>stdexcept</label>
      </node>
      <node id="677">
        <label>curl_get.hpp</label>
        <link refid="curl__get_8hpp_source"/>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
      </node>
      <node id="668">
        <label>string</label>
      </node>
      <node id="701">
        <label>reader.h</label>
        <link refid="reader_8h_source"/>
        <childnode refid="702" relation="include">
        </childnode>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="703" relation="include">
        </childnode>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
      </node>
      <node id="690">
        <label>screenshot_loader.hpp</label>
        <link refid="screenshot__loader_8hpp_source"/>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
      </node>
      <node id="694">
        <label>map</label>
      </node>
      <node id="670">
        <label>gameinfo.hpp</label>
        <link refid="gameinfo_8hpp_source"/>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
        <childnode refid="706" relation="include">
        </childnode>
        <childnode refid="707" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
      </node>
      <node id="683">
        <label>jobify.hpp</label>
        <link refid="jobify_8hpp_source"/>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
      </node>
      <node id="680">
        <label>fstream</label>
      </node>
      <node id="685">
        <label>zipjob.hpp</label>
        <link refid="zipjob_8hpp_source"/>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
      </node>
      <node id="678">
        <label>curl/curl.h</label>
      </node>
      <node id="687">
        <label>unzip.hpp</label>
        <link refid="unzip_8hpp_source"/>
        <childnode refid="688" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
      </node>
      <node id="667">
        <label>datalist.hpp</label>
        <link refid="datalist_8hpp_source"/>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
      </node>
      <node id="704">
        <label>stack</label>
      </node>
      <node id="664">
        <label>vector</label>
      </node>
      <node id="696">
        <label>json/json.h</label>
        <link refid="json_8h_source"/>
        <childnode refid="697" relation="include">
        </childnode>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="705" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
      </node>
      <node id="676">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="705">
        <label>writer.h</label>
        <link refid="writer_8h_source"/>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
      </node>
      <node id="697">
        <label>autolink.h</label>
        <link refid="autolink_8h_source"/>
        <childnode refid="698" relation="include">
        </childnode>
        <childnode refid="697" relation="include">
        </childnode>
      </node>
      <node id="671">
        <label>wx/string.h</label>
      </node>
      <node id="707">
        <label>time.h</label>
      </node>
      <node id="675">
        <label>tmpdir.hpp</label>
        <link refid="tmpdir_8hpp_source"/>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
      </node>
      <node id="693">
        <label>iostream</label>
      </node>
      <node id="663">
        <label>listkeeper.hpp</label>
        <link refid="listkeeper.hpp"/>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
      </node>
      <node id="682">
        <label>downloadjob.hpp</label>
        <link refid="downloadjob_8hpp_source"/>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
      </node>
      <node id="703">
        <label>deque</label>
      </node>
      <node id="681">
        <label>decodeurl.hpp</label>
        <link refid="decodeurl_8hpp_source"/>
        <childnode refid="668" relation="include">
        </childnode>
      </node>
      <node id="684">
        <label>wx/thread.h</label>
      </node>
      <node id="702">
        <label>features.h</label>
        <link refid="features_8h_source"/>
        <childnode refid="700" relation="include">
        </childnode>
      </node>
      <node id="695">
        <label>readjson.hpp</label>
        <link refid="readjson_8hpp_source"/>
        <childnode refid="696" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
      </node>
      <node id="666">
        <label>algorithm</label>
      </node>
      <node id="688">
        <label>zzip/zzip.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="709">
        <label>tiggit.cpp</label>
        <link refid="tiggit_8cpp_source"/>
      </node>
      <node id="708">
        <label>listkeeper.hpp</label>
        <link refid="listkeeper.hpp"/>
        <childnode refid="709" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_list_keeper" prot="public">ListKeeper</innerclass>
    <innerclass refid="struct_list_keeper_1_1_sort_base" prot="private">ListKeeper::SortBase</innerclass>
    <innerclass refid="struct_list_keeper_1_1_title_sort" prot="private">ListKeeper::TitleSort</innerclass>
    <innerclass refid="struct_list_keeper_1_1_rate_sort" prot="private">ListKeeper::RateSort</innerclass>
    <innerclass refid="struct_list_keeper_1_1_download_sort" prot="private">ListKeeper::DownloadSort</innerclass>
    <innerclass refid="struct_list_keeper_1_1_price_sort" prot="private">ListKeeper::PriceSort</innerclass>
    <innerclass refid="struct_list_keeper_1_1_date_sort" prot="private">ListKeeper::DateSort</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_LISTKEEPER_HPP_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_LISTKEEPER_HPP_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;datalist.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gameinfo.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_list_keeper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_list_keeper" kindref="compound">ListKeeper</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>base<sp/>selection<sp/>for<sp/>this<sp/>list.<sp/>Doesn&apos;t<sp/>change<sp/>after<sp/>it<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>been<sp/>set<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>base;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sub-selection,<sp/>used<sp/>for<sp/>tag<sp/>searches.<sp/>Is<sp/>applied<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>searching.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>subSelect;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Selection<sp/>criterium<sp/>used<sp/>to<sp/>set<sp/>up<sp/>the<sp/>base.<sp/>Set<sp/>through<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor,<sp/>and<sp/>cannot<sp/>be<sp/>changed<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selection;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Items<sp/>from<sp/>the<sp/>base<sp/>selected<sp/>after<sp/>searching.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>searched;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSearched;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSorted;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>0<sp/>-<sp/>title</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>1<sp/>-<sp/>date</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>2<sp/>-<sp/>rating,<sp/>then<sp/>title</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sortBy;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reverse;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>search<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>std::string<sp/>search;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="struct_data_list" kindref="compound">DataList</ref><sp/>&amp;data;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SortBase</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_data_list" kindref="compound">DataList</ref><sp/>&amp;data;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>SortBase(<ref refid="struct_data_list" kindref="compound">DataList</ref><sp/>&amp;d)<sp/>:<sp/>data(d)<sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>&apos;a&apos;<sp/>should<sp/>come<sp/>before<sp/>&apos;b&apos;<sp/>on<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLess(<ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;a,<sp/><ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;b)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isLess(data.arr[a],<sp/>data.arr[b]);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TitleSort<sp/>:<sp/>SortBase</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>TitleSort(<ref refid="struct_data_list" kindref="compound">DataList</ref><sp/>&amp;d)<sp/>:<sp/>SortBase(d)<sp/>{}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLess(<ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;a,<sp/><ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;b)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isLessStatic(a,<sp/>b);<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kludge<sp/>city,<sp/>but<sp/>it<sp/>works<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLessStatic(<ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;a,<sp/><ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;b)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::algorithm::ilexicographical_compare(a.tigInfo.title,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.tigInfo.title);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>based<sp/>on<sp/>rating,<sp/>fall<sp/>back<sp/>on<sp/>title<sp/>sort<sp/>if<sp/>rating<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>provide<sp/>enough<sp/>info<sp/>to<sp/>sort.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">RateSort<sp/>:<sp/>SortBase</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>RateSort(<ref refid="struct_data_list" kindref="compound">DataList</ref><sp/>&amp;d)<sp/>:<sp/>SortBase(d)<sp/>{}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLess(<ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;a,<sp/><ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;b)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a.rateCount<sp/>==<sp/>0)<sp/>a.rating<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b.rateCount<sp/>==<sp/>0)<sp/>b.rating<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>&apos;a&apos;<sp/>have<sp/>a<sp/>rating?<sp/>If<sp/>so,<sp/>sort<sp/>by<sp/>rating.<sp/>This<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>covers<sp/>the<sp/>case<sp/>where<sp/>&apos;b&apos;<sp/>has<sp/>no<sp/>rating<sp/>(b.rating<sp/>=<sp/>-1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a.rating<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>equal<sp/>ratings<sp/>by<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a.rating<sp/>==<sp/>b.rating)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TitleSort::isLessStatic(a,<sp/>b);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.rating<sp/>&gt;<sp/>b.rating;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;a&apos;<sp/>has<sp/>no<sp/>rating.<sp/>What<sp/>about<sp/>b?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b.rating<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>yes,<sp/>then<sp/>always<sp/>put<sp/>&apos;b&apos;<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Neither<sp/>has<sp/>a<sp/>rating.<sp/>Sort<sp/>by<sp/>title<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TitleSort::isLessStatic(a,<sp/>b);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>in<sp/>use<sp/>yet!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DownloadSort<sp/>:<sp/>SortBase</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>DownloadSort(<ref refid="struct_data_list" kindref="compound">DataList</ref><sp/>&amp;d)<sp/>:<sp/>SortBase(d)<sp/>{}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLess(<ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;a,<sp/><ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;b)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.dlCount<sp/>&gt;<sp/>b.dlCount;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>in<sp/>use<sp/>yet!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PriceSort<sp/>:<sp/>SortBase</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>PriceSort(<ref refid="struct_data_list" kindref="compound">DataList</ref><sp/>&amp;d)<sp/>:<sp/>SortBase(d)<sp/>{}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLess(<ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;a,<sp/><ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;b)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.tigInfo.price<sp/>&gt;<sp/>b.tigInfo.price;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DateSort<sp/>:<sp/>SortBase</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>DateSort(<ref refid="struct_data_list" kindref="compound">DataList</ref><sp/>&amp;d)<sp/>:<sp/>SortBase(d)<sp/>{}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLess(<ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;a,<sp/><ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;b)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.add_time<sp/>&gt;<sp/>b.add_time;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>makeReady()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isSearched)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Are<sp/>we<sp/>searching?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(search<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nope.<sp/>Select<sp/>all<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searched.resize(subSelect.size());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;searched.size();<sp/>i++)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searched[i]<sp/>=<sp/>subSelect[i];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Yes,<sp/>we<sp/>are<sp/>searching.<sp/>Start<sp/>from<sp/>scratch<sp/>and<sp/>add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searched.resize(0);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searched.reserve(subSelect.size());</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>all<sp/>games<sp/>that<sp/>match<sp/>the<sp/>search.<sp/>This<sp/>is<sp/>a<sp/>dumb,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slow<sp/>and<sp/>useless<sp/>algorithm,<sp/>but<sp/>at<sp/>current<sp/>list<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>ok.<sp/>Never<sp/>optimize<sp/>until<sp/>you<sp/>get<sp/>hate<sp/>mail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;subSelect.size();<sp/>i++)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ind<sp/>=<sp/>subSelect[i];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(boost::algorithm::icontains(data.arr[ind].tigInfo.title,<sp/>search))</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searched.push_back(ind);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isSearched<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isSorted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(isSearched);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isSorted)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>current<sp/>sorting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sortBy<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reverse)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort(searched.rbegin(),<sp/>searched.rend(),<sp/>TitleSort(data));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort(searched.begin(),<sp/>searched.end(),<sp/>TitleSort(data));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sortBy<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>repeated<sp/>code,<sp/>thanks<sp/>to<sp/>C++<sp/>actually<sp/>being<sp/>quite<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sucky<sp/>language.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reverse)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort(searched.rbegin(),<sp/>searched.rend(),<sp/>DateSort(data));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort(searched.begin(),<sp/>searched.end(),<sp/>DateSort(data));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sortBy<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reverse)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort(searched.rbegin(),<sp/>searched.rend(),<sp/>RateSort(data));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort(searched.begin(),<sp/>searched.end(),<sp/>RateSort(data));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isSorted<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(isSorted<sp/>&amp;&amp;<sp/>isSearched);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSort(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>sortBy<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>isSorted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/>Second<sp/>parameter<sp/>to<sp/>the<sp/>constructor<sp/>is<sp/>the<sp/>selection.<sp/>Choose<sp/>from</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>following<sp/>enum<sp/>values.</highlight></codeline>
<codeline lineno="209"><highlight class="comment"></highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/>TODO:<sp/>We<sp/>could<sp/>make<sp/>a<sp/>flag<sp/>system<sp/>out<sp/>of<sp/>this<sp/>or<sp/>something,<sp/>but</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/>it&apos;s<sp/>not<sp/>that<sp/>important.<sp/>We<sp/>will<sp/>probably<sp/>script<sp/>the<sp/>entire<sp/>thing</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/>later<sp/>at<sp/>some<sp/>point<sp/>anyway.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SL_ALL<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>games</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SL_FREEWARE<sp/>=<sp/>2,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-installed,<sp/>non-new<sp/>freeware<sp/>games</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SL_DEMOS<sp/><sp/><sp/><sp/>=<sp/>3,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-installed,<sp/>non-new<sp/>demos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SL_NEW<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New,<sp/>non-installed<sp/>games<sp/>(of<sp/>all<sp/>types)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SL_INSTALL<sp/><sp/>=<sp/>8<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Games<sp/>installed<sp/>or<sp/>being<sp/>installed<sp/>(of<sp/>all<sp/>types)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="class_list_keeper" kindref="compound">ListKeeper</ref>(<ref refid="struct_data_list" kindref="compound">DataList</ref><sp/>&amp;dt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>select<sp/>=<sp/>SL_ALL)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>selection(select),<sp/>isSearched(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>isSorted(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>sortBy(0),</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reverse(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>data(dt)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>{<sp/>reset();<sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sortTitle()<sp/>{<sp/>setSort(0);<sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sortDate()<sp/>{<sp/>setSort(1);<sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sortRating()<sp/>{<sp/>setSort(2);<sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSubSelection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>&amp;sel)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>isSorted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>isSearched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>subSelect.resize(sel.size());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;sel.size();<sp/>i++)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ind<sp/>=<sp/>sel[i];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ind<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>ind<sp/>&lt;<sp/>base.size());</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subSelect[i]<sp/>=<sp/>base[ind];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearSubSelection()</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>isSorted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>isSearched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>subSelect.resize(base.size());</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;subSelect.size();<sp/>i++)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subSelect[i]<sp/>=<sp/>base[i];</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setReverse(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rev)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>reverse<sp/>=<sp/>rev;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>isSorted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSearch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;str)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>search<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>isSearched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;</highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>size());</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>makeReady();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data.arr[searched[index]];</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Called<sp/>whenever<sp/>the<sp/>source<sp/>data<sp/>list<sp/>changes.<sp/>It<sp/>basically<sp/>means</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>we<sp/>have<sp/>to<sp/>throw<sp/>everything<sp/>out.<sp/>It<sp/>is<sp/>also<sp/>called<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>constructor.</highlight></codeline>
<codeline lineno="279"><highlight class="comment"></highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Calling<sp/>reset()<sp/>will<sp/>NOT<sp/>clear/reset<sp/>the<sp/>current<sp/>search<sp/>string<sp/>or</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>sorting<sp/>selection.<sp/>It<sp/>will<sp/>only<sp/>throw<sp/>out<sp/>our<sp/>cached<sp/>lists,</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>forcing<sp/>the<sp/>search<sp/>and<sp/>sort<sp/>to<sp/>be<sp/>repeated<sp/>on<sp/>the<sp/>new<sp/>dataset</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>upon<sp/>the<sp/>next<sp/>call<sp/>to<sp/>get().</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>base.resize(0);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>base.reserve(data.arr.size());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(selection<sp/>==<sp/>SL_ALL)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>the<sp/>entire<sp/>thing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.resize(data.arr.size());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;base.size();<sp/>i++)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>the<sp/>database<sp/>and<sp/>insert<sp/>matching<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;data.arr.size();<sp/>i++)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data_list_1_1_entry" kindref="compound">DataList::Entry</ref><sp/>&amp;e<sp/>=<sp/>data.arr[i];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_game_info" kindref="compound">GameInfo</ref><sp/>&amp;g<sp/>=<sp/>GameInfo::conv(e);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keep<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Installed<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(selection<sp/>==<sp/>SL_INSTALL)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>list<sp/>everything<sp/>that&apos;s<sp/>got<sp/>a<sp/>non-zero<sp/>install</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(g.isInstalled()<sp/>||<sp/>g.isWorking())</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Installed<sp/>games<sp/>may<sp/>not<sp/>be<sp/>listed<sp/>anywhere<sp/>else,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>this<sp/>game.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(g.isInstalled()<sp/>||<sp/>g.isWorking())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>into<sp/>each<sp/>tab<sp/>according<sp/>to<sp/>their<sp/>own<sp/>criteria</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(selection<sp/>==<sp/>SL_NEW<sp/>&amp;&amp;<sp/>e.isNew<sp/>||</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selection<sp/>==<sp/>SL_FREEWARE<sp/>&amp;&amp;<sp/>!e.tigInfo.isDemo<sp/>||</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selection<sp/>==<sp/>SL_DEMOS<sp/>&amp;&amp;<sp/>e.tigInfo.isDemo)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keep<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(keep)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.push_back(i);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>the<sp/>subselection<sp/>to<sp/>be<sp/>the<sp/>entire<sp/>base<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>clearSubSelection();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>baseSize()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base.size();<sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size()</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>makeReady();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>searched.size();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>&amp;getBaseList()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base;<sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal">};</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/ericgallager/Tiggit/listkeeper.hpp"/>
  </compounddef>
</doxygen>
