<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.0">
  <compounddef id="class_json_1_1_value_iterator" kind="class" prot="public">
    <compoundname>Json::ValueIterator</compoundname>
    <basecompoundref refid="class_json_1_1_value_iterator_base" prot="public" virt="non-virtual">Json::ValueIteratorBase</basecompoundref>
    <includes refid="value_8h" local="no">value.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_1a308b8932ffc83eaa9d12dadd5c11a7dd" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int Json::ValueIterator::size_t</definition>
        <argsstring></argsstring>
        <name>size_t</name>
        <reimplements refid="class_json_1_1_value_iterator_base_1a9d3a3c7ce5cdefe23cb486239cf07bb5">size_t</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1011" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="1011" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_1a2be1a9aa60bbfc8812e9dd1a7f1a8786" prot="public" static="no">
        <type>int</type>
        <definition>typedef int Json::ValueIterator::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <reimplements refid="class_json_1_1_value_iterator_base_1a4e44bf8cbd17ec8d6e2c185904a15ebd">difference_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1012" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="1012" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_1ae87929b4567aa00372cf602c43b57160" prot="public" static="no">
        <type>Value &amp;</type>
        <definition>typedef Value&amp; Json::ValueIterator::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1013" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="1013" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_1acec45feb1ef1f3bf81240157d06d5432" prot="public" static="no">
        <type>Value *</type>
        <definition>typedef Value* Json::ValueIterator::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1014" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="1014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_json_1_1_value_iterator_1a23357670fdad61792670d86f62db7e16" prot="public" static="no">
        <type><ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref></type>
        <definition>typedef ValueIterator Json::ValueIterator::SelfType</definition>
        <argsstring></argsstring>
        <name>SelfType</name>
        <reimplements refid="class_json_1_1_value_iterator_base_1a9d2a940d03ea06d20d972f41a89149ee">SelfType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1015" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="1015" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_json_1_1_value_iterator_1aeceedf6e1a7d48a588516ce2b1983d6f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Value</definition>
        <argsstring></argsstring>
        <name>Value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1009" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="1009" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_json_1_1_value_iterator_1ab26cc73806c61ef54962ff28b69de16a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ValueIterator::ValueIterator</definition>
        <argsstring>()</argsstring>
        <name>ValueIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1017" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/src/json_value.cpp" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1ad799532bd4ef8815011f72d687460ffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ValueIterator::ValueIterator</definition>
        <argsstring>(const ValueConstIterator &amp;other)</argsstring>
        <name>ValueIterator</name>
        <param>
          <type>const <ref refid="class_json_1_1_value_const_iterator" kindref="compound">ValueConstIterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1018" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/src/json_value.cpp" bodystart="278" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1a08398583fe03f474f24779fb8001d999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ValueIterator::ValueIterator</definition>
        <argsstring>(const ValueIterator &amp;other)</argsstring>
        <name>ValueIterator</name>
        <param>
          <type>const <ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1019" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/src/json_value.cpp" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1a0ce103c2e383e3c9574f95aed4934271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref> &amp;</type>
        <definition>ValueIterator &amp; ValueIterator::operator=</definition>
        <argsstring>(const SelfType &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1031" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/src/json_value.cpp" bodystart="289" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1abcf4ddd994a010742cd4a436d65acd08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref></type>
        <definition>SelfType Json::ValueIterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1034" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="1033" bodyend="1038"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1a06d6a29d96caf6af324a53973159e12b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref></type>
        <definition>SelfType Json::ValueIterator::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1041" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="1040" bodyend="1045"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1a811302a868518a0995a9def955df5720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref> &amp;</type>
        <definition>SelfType&amp; Json::ValueIterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1048" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="1047" bodyend="1051"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1a92146c46f8249e2b2d12869e70cd4cee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator_base" kindref="compound">SelfType</ref> &amp;</type>
        <definition>SelfType&amp; Json::ValueIterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1054" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="1053" bodyend="1057"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_iterator_1aaa5be3457eedf0526a03b8a3b4c7c0a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference Json::ValueIterator::operator*</definition>
        <argsstring>() const </argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1060" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="1059" bodyend="1062"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_json_1_1_value_iterator_1a6318e60a47bcf05472b42c55e8598b5a" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ValueIterator::ValueIterator</definition>
        <argsstring>(const Value::ObjectValues::iterator &amp;current)</argsstring>
        <name>ValueIterator</name>
        <param>
          <type>const Value::ObjectValues::iterator &amp;</type>
          <declname>current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1024" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/src/json_value.cpp" bodystart="262" bodyend="265"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Iterator for object and array value. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="655">
        <label>Json::ValueIterator</label>
        <link refid="class_json_1_1_value_iterator"/>
        <childnode refid="656" relation="public-inheritance">
        </childnode>
      </node>
      <node id="656">
        <label>Json::ValueIteratorBase</label>
        <link refid="class_json_1_1_value_iterator_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="657">
        <label>Json::ValueIterator</label>
        <link refid="class_json_1_1_value_iterator"/>
        <childnode refid="658" relation="public-inheritance">
        </childnode>
      </node>
      <node id="658">
        <label>Json::ValueIteratorBase</label>
        <link refid="class_json_1_1_value_iterator_base"/>
      </node>
    </collaborationgraph>
    <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="1008" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="1007" bodyend="1063"/>
    <listofallmembers>
      <member refid="class_json_1_1_value_iterator_base_1a79eff2632ecabafeb19aa74d066061fe" prot="protected" virt="non-virtual"><scope>Json::ValueIterator</scope><name>computeDistance</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a938659a563d99d0199b655b3747367f2" prot="protected" virt="non-virtual"><scope>Json::ValueIterator</scope><name>copy</name></member>
      <member refid="class_json_1_1_value_iterator_base_1ab1a5b6694984a2c53567174126938d8c" prot="protected" virt="non-virtual"><scope>Json::ValueIterator</scope><name>decrement</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a4ca11f1e5a984554b79fc98dd69577c0" prot="protected" virt="non-virtual"><scope>Json::ValueIterator</scope><name>deref</name></member>
      <member refid="class_json_1_1_value_iterator_1a2be1a9aa60bbfc8812e9dd1a7f1a8786" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>difference_type</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a5ed55be0046592580110a79d16003c2b" prot="protected" virt="non-virtual"><scope>Json::ValueIterator</scope><name>increment</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a5671376c32cb0fb95cbe0934be3ea5af" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>index</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a1ffe2d20b6476f84e055aa1094fe70c6" prot="protected" virt="non-virtual"><scope>Json::ValueIterator</scope><name>isEqual</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a7fe8b45ba67da5f01dc54273242c5f46" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>key</name></member>
      <member refid="class_json_1_1_value_iterator_base_1ac71f27274c0326832dedec3060133a0d" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>memberName</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a18c2dd42e0bb989ace141bfe9de52792" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator!=</name></member>
      <member refid="class_json_1_1_value_iterator_1aaa5be3457eedf0526a03b8a3b4c7c0a0" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator*</name></member>
      <member refid="class_json_1_1_value_iterator_1abcf4ddd994a010742cd4a436d65acd08" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator++</name></member>
      <member refid="class_json_1_1_value_iterator_1a92146c46f8249e2b2d12869e70cd4cee" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator++</name></member>
      <member refid="class_json_1_1_value_iterator_base_1ab786787fcad68ca5e8745aaf520fa17f" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator-</name></member>
      <member refid="class_json_1_1_value_iterator_1a06d6a29d96caf6af324a53973159e12b" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator--</name></member>
      <member refid="class_json_1_1_value_iterator_1a811302a868518a0995a9def955df5720" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator--</name></member>
      <member refid="class_json_1_1_value_iterator_1a0ce103c2e383e3c9574f95aed4934271" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator=</name></member>
      <member refid="class_json_1_1_value_iterator_base_1afc656672ac28502f640ade32c38c1b56" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>operator==</name></member>
      <member refid="class_json_1_1_value_iterator_1acec45feb1ef1f3bf81240157d06d5432" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>pointer</name></member>
      <member refid="class_json_1_1_value_iterator_1ae87929b4567aa00372cf602c43b57160" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>reference</name></member>
      <member refid="class_json_1_1_value_iterator_1a23357670fdad61792670d86f62db7e16" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>SelfType</name></member>
      <member refid="class_json_1_1_value_iterator_1a308b8932ffc83eaa9d12dadd5c11a7dd" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>size_t</name></member>
      <member refid="class_json_1_1_value_iterator_1aeceedf6e1a7d48a588516ce2b1983d6f" prot="private" virt="non-virtual"><scope>Json::ValueIterator</scope><name>Value</name></member>
      <member refid="class_json_1_1_value_iterator_1ab26cc73806c61ef54962ff28b69de16a" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>ValueIterator</name></member>
      <member refid="class_json_1_1_value_iterator_1ad799532bd4ef8815011f72d687460ffd" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>ValueIterator</name></member>
      <member refid="class_json_1_1_value_iterator_1a08398583fe03f474f24779fb8001d999" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>ValueIterator</name></member>
      <member refid="class_json_1_1_value_iterator_1a6318e60a47bcf05472b42c55e8598b5a" prot="private" virt="non-virtual"><scope>Json::ValueIterator</scope><name>ValueIterator</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a9ea825541dda0d057fbc0ff8a3d2c76f" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>ValueIteratorBase</name></member>
      <member refid="class_json_1_1_value_iterator_base_1a38e5d4351341621d69ec0647bebd6393" prot="public" virt="non-virtual"><scope>Json::ValueIterator</scope><name>ValueIteratorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
