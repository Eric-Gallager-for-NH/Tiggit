<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.0">
  <compounddef id="protocol_json_1_1_j_s_o_n___a_p_i" kind="protocol" prot="public">
    <compoundname>Json::JSON_API</compoundname>
    <includes refid="features_8h" local="no">features.h</includes>
    <innerclass refid="struct_json_1_1_j_s_o_n___a_p_i_1_1_comment_info" prot="private">Json::JSON_API::CommentInfo</innerclass>
    <innerclass refid="class_json_1_1_j_s_o_n___a_p_i_1_1_c_z_string" prot="private">Json::JSON_API::CZString</innerclass>
    <innerclass refid="class_json_1_1_j_s_o_n___a_p_i_1_1_error_info" prot="private">Json::JSON_API::ErrorInfo</innerclass>
    <innerclass refid="class_json_1_1_j_s_o_n___a_p_i_1_1_token" prot="private">Json::JSON_API::Token</innerclass>
    <innerclass refid="union_json_1_1_j_s_o_n___a_p_i_1_1_value_holder" prot="private">Json::JSON_API::ValueHolder</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437" prot="private" static="no">
        <name>TokenType</name>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a958c81b8f87d8b3131278388a9010a93" prot="private">
          <name>tokenEndOfStream</name>
          <initializer> 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a6d001037293238d0c43804c79711a25a" prot="private">
          <name>tokenObjectBegin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a9c8dd56f830ba2bf5c7f8a27fa016fb3" prot="private">
          <name>tokenObjectEnd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437ad74e3cba39004934e5ad4ea54956b86b" prot="private">
          <name>tokenArrayBegin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a13bde27eea60377968e7abadf3dcfada" prot="private">
          <name>tokenArrayEnd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a92633e5c58823ec8bdbe4af1b7f33221" prot="private">
          <name>tokenString</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a8ecd1dcf97b2c253e3c875056a387301" prot="private">
          <name>tokenNumber</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437ac1aeb4ca0f83f3b69a273af561ede753" prot="private">
          <name>tokenTrue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a30cfd7d1f253df03e2c356358ffe50f3" prot="private">
          <name>tokenFalse</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437ac64d3219a888c9324c7517cd226776f6" prot="private">
          <name>tokenNull</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437ab31f0f4fc3853995ed142b219c78de49" prot="private">
          <name>tokenArraySeparator</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a81b9a5adb576b71d48945f0e9e1f238e" prot="private">
          <name>tokenMemberSeparator</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437ace85506cf139917136422872856ebe13" prot="private">
          <name>tokenComment</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437adfbb88efb3b884477b71999d51fc8e49" prot="private">
          <name>tokenError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="75" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="74" bodyend="90"/>
      </memberdef>
      <memberdef kind="typedef" id="protocol_json_1_1_j_s_o_n___a_p_i_1a618935c31ecce0bc20781f4cc4941993" prot="private" static="no">
        <type>std::deque&lt; ErrorInfo &gt;</type>
        <definition>typedef std::deque&lt;ErrorInfo&gt; Json::JSON_API::Errors</definition>
        <argsstring></argsstring>
        <name>Errors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="108" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="protocol_json_1_1_j_s_o_n___a_p_i_1a958e0c34279abb7523fec2f25263d729" prot="private" static="no">
        <type>std::stack&lt; <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> * &gt;</type>
        <definition>typedef std::stack&lt;Value *&gt; Json::JSON_API::Nodes</definition>
        <argsstring></argsstring>
        <name>Nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="154" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="protocol_json_1_1_j_s_o_n___a_p_i_1a22fb69662c4b38f0bc786fa6c521cd96" prot="private" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>typedef std::vector&lt;std::string&gt; Json::JSON_API::ChildValues</definition>
        <argsstring></argsstring>
        <name>ChildValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="92" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="protocol_json_1_1_j_s_o_n___a_p_i_1a22fb69662c4b38f0bc786fa6c521cd96" prot="private" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>typedef std::vector&lt;std::string&gt; Json::JSON_API::ChildValues</definition>
        <argsstring></argsstring>
        <name>ChildValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="150" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="protocol_json_1_1_j_s_o_n___a_p_i_1aaa40995a01a083f11fdb518ab1546366" prot="public" static="no">
        <type>char</type>
        <definition>typedef char Json::JSON_API::Char</definition>
        <argsstring></argsstring>
        <name>Char</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="19" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="protocol_json_1_1_j_s_o_n___a_p_i_1ac78c2a0788236409a83cd3fbb15cc27e" prot="public" static="no">
        <type>const Char *</type>
        <definition>typedef const Char* Json::JSON_API::Location</definition>
        <argsstring></argsstring>
        <name>Location</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="20" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="protocol_json_1_1_j_s_o_n___a_p_i_1a69a83395b9a01ee28dbc5026a322ad56" prot="public" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>typedef std::vector&lt;std::string&gt; Json::JSON_API::Members</definition>
        <argsstring></argsstring>
        <name>Members</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="119" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="protocol_json_1_1_j_s_o_n___a_p_i_1a682f4e1bbed287f1ab85ee0912d68b3e" prot="public" static="no">
        <type><ref refid="class_json_1_1_value_iterator" kindref="compound">ValueIterator</ref></type>
        <definition>typedef ValueIterator Json::JSON_API::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="120" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="protocol_json_1_1_j_s_o_n___a_p_i_1a8f629afe15b29cf656d532bb9b4509e4" prot="public" static="no">
        <type><ref refid="class_json_1_1_value_const_iterator" kindref="compound">ValueConstIterator</ref></type>
        <definition>typedef ValueConstIterator Json::JSON_API::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="121" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="protocol_json_1_1_j_s_o_n___a_p_i_1a065237d47a9dffbf14ad04842ff50586" prot="public" static="no">
        <type>Json::UInt</type>
        <definition>typedef Json::UInt Json::JSON_API::UInt</definition>
        <argsstring></argsstring>
        <name>UInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="122" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="protocol_json_1_1_j_s_o_n___a_p_i_1abed1de75991fb8d5afe4a4854def6293" prot="public" static="no">
        <type>Json::Int</type>
        <definition>typedef Json::Int Json::JSON_API::Int</definition>
        <argsstring></argsstring>
        <name>Int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="123" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="protocol_json_1_1_j_s_o_n___a_p_i_1ad35740d876f51395815a4fa8a353859f" prot="public" static="no">
        <type>UInt</type>
        <definition>typedef UInt Json::JSON_API::ArrayIndex</definition>
        <argsstring></argsstring>
        <name>ArrayIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="124" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="protocol_json_1_1_j_s_o_n___a_p_i_1a10657a8f9bc6f360dae4016fe8cc7650" prot="public" static="no">
        <type>std::map&lt; CZString, <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &gt;</type>
        <definition>typedef std::map&lt;CZString, Value&gt; Json::JSON_API::ObjectValues</definition>
        <argsstring></argsstring>
        <name>ObjectValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="161" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a647b2843efe8a0a69353ab915527eafe" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Json::JSON_API::allowComments_</definition>
        <argsstring></argsstring>
        <name>allowComments_</name>
        <briefdescription>
<para><computeroutput>true</computeroutput> if comments are allowed. Default: <computeroutput>true</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/features.h" line="34" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/features.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a309a273d34b98d60ba6479343f4974e3" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Json::JSON_API::strictRoot_</definition>
        <argsstring></argsstring>
        <name>strictRoot_</name>
        <briefdescription>
<para><computeroutput>true</computeroutput> if root must be either an array or an object value. Default: <computeroutput>false</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/features.h" line="37" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/features.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a51ad6d6b3a5ea20cf9137f888966daef" prot="private" static="no" mutable="no">
        <type>Nodes</type>
        <definition>Nodes Json::JSON_API::nodes_</definition>
        <argsstring></argsstring>
        <name>nodes_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="155" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a3cded0478b67af467cc28672b1d31cc7" prot="private" static="no" mutable="no">
        <type>Errors</type>
        <definition>Errors Json::JSON_API::errors_</definition>
        <argsstring></argsstring>
        <name>errors_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="156" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a739e7eb36b3ec600098552ac41f6694e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Json::JSON_API::document_</definition>
        <argsstring></argsstring>
        <name>document_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="157" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1aaa0ac9885fe640a3b325f1ddb635ca75" prot="private" static="no" mutable="no">
        <type>Location</type>
        <definition>Location Json::JSON_API::begin_</definition>
        <argsstring></argsstring>
        <name>begin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="158" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a917b0105bd7ca5d4ecf4c0224b19b651" prot="private" static="no" mutable="no">
        <type>Location</type>
        <definition>Location Json::JSON_API::end_</definition>
        <argsstring></argsstring>
        <name>end_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="159" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a9ac13ed9bd17d9f33cbfba7b9bdc815a" prot="private" static="no" mutable="no">
        <type>Location</type>
        <definition>Location Json::JSON_API::current_</definition>
        <argsstring></argsstring>
        <name>current_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="160" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1ace28ad0599793b726d56c5acb2a49edc" prot="private" static="no" mutable="no">
        <type>Location</type>
        <definition>Location Json::JSON_API::lastValueEnd_</definition>
        <argsstring></argsstring>
        <name>lastValueEnd_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="161" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a045f4f0f3aa8e40aaab0629fd5fed602" prot="private" static="no" mutable="no">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> *</type>
        <definition>Value* Json::JSON_API::lastValue_</definition>
        <argsstring></argsstring>
        <name>lastValue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="162" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a0bb4b295b0c27a9615dc800056086ac3" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Json::JSON_API::commentsBefore_</definition>
        <argsstring></argsstring>
        <name>commentsBefore_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="163" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a8b4220b31ddb5fd914835948530976a2" prot="private" static="no" mutable="no">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1ad689444ef42491b89324975696f0ed58" kindref="member">Features</ref></type>
        <definition>Features Json::JSON_API::features_</definition>
        <argsstring></argsstring>
        <name>features_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="164" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1aa4075c3bc6c013c56205e9afa2f3f669" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Json::JSON_API::collectComments_</definition>
        <argsstring></argsstring>
        <name>collectComments_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="165" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1abf19bda5d8c7ae59ac29d4cbe3343e6b" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* Json::JSON_API::str_</definition>
        <argsstring></argsstring>
        <name>str_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="81" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a2b920a9d8fece23404a4b83d832d53cc" prot="private" static="no" mutable="no">
        <type>union Json::JSON_API::ValueHolder</type>
        <definition>union Json::JSON_API::ValueHolder  Json::JSON_API::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="438"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a1f7a428d732e68aabca929ee461906ed" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref></type>
        <definition>ValueType Json::JSON_API::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <bitfield> 8</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="439" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1adee6b57e03696111f43a63bf7fd061df" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Json::JSON_API::allocated_</definition>
        <argsstring></argsstring>
        <name>allocated_</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="440" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a648a4a1df8f56f17a46f7099475cf570" prot="private" static="no" mutable="no">
        <type>CommentInfo *</type>
        <definition>CommentInfo* Json::JSON_API::comments_</definition>
        <argsstring></argsstring>
        <name>comments_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="445" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a33a745033d492318b405f942c20b71fc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Json::JSON_API::yamlCompatiblityEnabled_</definition>
        <argsstring></argsstring>
        <name>yamlCompatiblityEnabled_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="44" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1ae2f833c27cfe1781c9310b636753b0c7" prot="private" static="no" mutable="no">
        <type>ChildValues</type>
        <definition>ChildValues Json::JSON_API::childValues_</definition>
        <argsstring></argsstring>
        <name>childValues_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="94" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1aeb8eb61e51b97303f2d5b78aee21f912" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Json::JSON_API::indentString_</definition>
        <argsstring></argsstring>
        <name>indentString_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="96" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a95ca65dc659117738cb24c121ff9ce87" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Json::JSON_API::rightMargin_</definition>
        <argsstring></argsstring>
        <name>rightMargin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="97" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1ad12c896fb698a0f3b0af2ca6f341225f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Json::JSON_API::indentSize_</definition>
        <argsstring></argsstring>
        <name>indentSize_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="98" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a12ef3b78e9d41df3dcac2301ed775e00" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Json::JSON_API::addChildValues_</definition>
        <argsstring></argsstring>
        <name>addChildValues_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="99" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a0f922489b81e313f6b00e0e73fe7d424" prot="private" static="no" mutable="no">
        <type>std::ostream *</type>
        <definition>std::ostream* Json::JSON_API::document_</definition>
        <argsstring></argsstring>
        <name>document_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="153" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1ad4f19ad2c841690576eadfb42cafa039" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Json::JSON_API::indentation_</definition>
        <argsstring></argsstring>
        <name>indentation_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="156" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="protocol_json_1_1_j_s_o_n___a_p_i_1ad016df56489e5d360735457afba2f649" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ValueIteratorBase</definition>
        <argsstring></argsstring>
        <name>ValueIteratorBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="113" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1ac93090d15c633f942a091a876dcb8f9c" prot="public" static="yes" mutable="no">
        <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref></type>
        <definition>const Value Json::JSON_API::null</definition>
        <argsstring></argsstring>
        <name>null</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="126" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a3c6b7f48958ebf357522e14c82f21a90" prot="public" static="yes" mutable="no">
        <type>const Int</type>
        <definition>const Int Json::JSON_API::minInt</definition>
        <argsstring></argsstring>
        <name>minInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="127" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a34e3ac05230d2b91916958f036b4badd" prot="public" static="yes" mutable="no">
        <type>const Int</type>
        <definition>const Int Json::JSON_API::maxInt</definition>
        <argsstring></argsstring>
        <name>maxInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="128" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="protocol_json_1_1_j_s_o_n___a_p_i_1a3cdaa96e9bbf12202d61005e87f70697" prot="public" static="yes" mutable="no">
        <type>const UInt</type>
        <definition>const UInt Json::JSON_API::maxUInt</definition>
        <argsstring></argsstring>
        <name>maxUInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="129" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a597c6015488c43c485760edda8cfdf5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1ad689444ef42491b89324975696f0ed58" kindref="member">Features</ref></type>
        <definition>static Features Json::JSON_API::all</definition>
        <argsstring>()</argsstring>
        <name>all</name>
        <briefdescription>
<para>A configuration that allows all features and assumes all strings are UTF-8. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>C &amp; C++ comments are allowed</para></listitem><listitem><para>Root object can be any JSON value</para></listitem><listitem><para>Assumes Value strings are encoded in UTF-8 </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/features.h" line="20"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1af354da64e0f08333590de851180e1b41" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1ad689444ef42491b89324975696f0ed58" kindref="member">Features</ref></type>
        <definition>static Features Json::JSON_API::strictMode</definition>
        <argsstring>()</argsstring>
        <name>strictMode</name>
        <briefdescription>
<para>A configuration that is strictly compatible with the JSON specification. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Comments are forbidden.</para></listitem><listitem><para>Root object must be either an array or an object value.</para></listitem><listitem><para>Assumes Value strings are encoded in UTF-8 </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/features.h" line="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ad689444ef42491b89324975696f0ed58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::Features</definition>
        <argsstring>()</argsstring>
        <name>Features</name>
        <briefdescription>
<para>Initialize the configuration like JsonConfig::allFeatures;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/features.h" line="31"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a8d5594b46204fb65661a8c96c015ea54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::Reader</definition>
        <argsstring>()</argsstring>
        <name>Reader</name>
        <briefdescription>
<para>Constructs a Reader allowing all features for parsing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="25"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ada43ccb4bc15d260528629cb7aebb8ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::Reader</definition>
        <argsstring>(const Features &amp;features)</argsstring>
        <name>Reader</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1ad689444ef42491b89324975696f0ed58" kindref="member">Features</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
<para>Constructs a Reader allowing the specified feature set for parsing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="30"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ae59036936fda704af5ff0dd27d759d61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::parse</definition>
        <argsstring>(const std::string &amp;document, Value &amp;root, bool collectComments=true)</argsstring>
        <name>parse</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>document</declname>
        </param>
        <param>
          <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>collectComments</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Read a Value from a <ulink url="http://www.json.org">JSON</ulink> document. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>document</parametername>
</parameternamelist>
<parameterdescription>
<para>UTF-8 encoded string containing the document to read. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] Contains the root value of the document if it was successfully parsed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collectComments</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to collect comment and allow writing them back during serialization, <computeroutput>false</computeroutput> to discard comments. This parameter is ignored if Features::allowComments_ is <computeroutput>false</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the document was successfully parsed, <computeroutput>false</computeroutput> if an error occurred. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="44"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a30735cd943a02164996275abe1712224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::parse</definition>
        <argsstring>(const char *beginDoc, const char *endDoc, Value &amp;root, bool collectComments=true)</argsstring>
        <name>parse</name>
        <param>
          <type>const char *</type>
          <declname>beginDoc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>endDoc</declname>
        </param>
        <param>
          <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>collectComments</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Read a Value from a <ulink url="http://www.json.org">JSON</ulink> document. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>document</parametername>
</parameternamelist>
<parameterdescription>
<para>UTF-8 encoded string containing the document to read. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>[out] Contains the root value of the document if it was successfully parsed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collectComments</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>true</computeroutput> to collect comment and allow writing them back during serialization, <computeroutput>false</computeroutput> to discard comments. This parameter is ignored if Features::allowComments_ is <computeroutput>false</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the document was successfully parsed, <computeroutput>false</computeroutput> if an error occurred. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="58"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a54923dcea65f8fc8d91f5625e7aa3cc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::parse</definition>
        <argsstring>(std::istream &amp;is, Value &amp;root, bool collectComments=true)</argsstring>
        <name>parse</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>collectComments</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Parse from input stream. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>Json::operator&gt;&gt;(std::istream&amp;, Json::Value&amp;). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="64"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ad2995c11c6aeb7719af179c0eacb6c85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Json::JSON_API::getFormatedErrorMessages</definition>
        <argsstring>() const </argsstring>
        <name>getFormatedErrorMessages</name>
        <briefdescription>
<para>Returns a user friendly string that list errors in the parsed document. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Formatted error message with the list of errors with their location in the parsed document. An empty string is returned if no error occurred during parsing. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="71"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1afdc014f5f606d49f78bae1467f6b28d5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::StaticString</definition>
        <argsstring>(const char *czstring)</argsstring>
        <name>StaticString</name>
        <param>
          <type>const char *</type>
          <declname>czstring</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="67" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ad2611e5ce83556c555cdc40ef5f52c8e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::operator const char *</definition>
        <argsstring>() const </argsstring>
        <name>operator const char *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="71" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1adc66a5168f8d6578974acfb0d8f5a1e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* Json::JSON_API::c_str</definition>
        <argsstring>() const </argsstring>
        <name>c_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="76" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::Value</definition>
        <argsstring>(ValueType type=nullValue)</argsstring>
        <name>Value</name>
        <param>
          <type><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref></type>
          <declname>type</declname>
          <defval><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref></defval>
        </param>
        <briefdescription>
<para>Create a default Value of the given type. </para>        </briefdescription>
        <detaileddescription>
<para><verbatim>   This is a very useful constructor.
   To create an empty array, pass arrayValue.
   To create an empty object, pass objectValue.
   Another Value can then be set to this one by assignment.
   This is useful since clear() and resize() will not alter types.

   Examples:
</verbatim> <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>null_value;<sp/></highlight><highlight class="comment">//<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>arr_value(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member" tooltip="array value (ordered list)">Json::arrayValue</ref>);<sp/></highlight><highlight class="comment">//<sp/>[]</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>obj_value(<ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member" tooltip="object value (collection of name/value pairs).">Json::objectValue</ref>);<sp/></highlight><highlight class="comment">//<sp/>{}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="184"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ae81d6899887463e4fe0bdad8b06e1214" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::Value</definition>
        <argsstring>(Int value)</argsstring>
        <name>Value</name>
        <param>
          <type>Int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="185"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1af3c698ea7116db3d779d92ad50feb2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::Value</definition>
        <argsstring>(UInt value)</argsstring>
        <name>Value</name>
        <param>
          <type>UInt</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="186"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1abd1299b9965e82812a6494522cc3c804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::Value</definition>
        <argsstring>(double value)</argsstring>
        <name>Value</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="187"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a87d184b04b4759a059f396df660834b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::Value</definition>
        <argsstring>(const char *value)</argsstring>
        <name>Value</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="188"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ae288a97eaaf54fe2d16f3b73d060d22a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::Value</definition>
        <argsstring>(const char *beginValue, const char *endValue)</argsstring>
        <name>Value</name>
        <param>
          <type>const char *</type>
          <declname>beginValue</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>endValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="189"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a5514e83243c886dbb4594877ada2ce05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::Value</definition>
        <argsstring>(const StaticString &amp;value)</argsstring>
        <name>Value</name>
        <param>
          <type>const StaticString &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs a value from a static string. </para>        </briefdescription>
        <detaileddescription>
<para>Like other value string constructor but do not duplicate the string for internal storage. The given string must remain alive after the call to this constructor. Example of usage: <programlisting><codeline><highlight class="normal"><sp/>Json::Value<sp/>aValue(<sp/>StaticString(</highlight><highlight class="stringliteral">&quot;some<sp/>text&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="200"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a58fa65d882bdcdea20e5764f8f0d2292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::Value</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>Value</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="201"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a6266f6b439a379762e4ed9ee05dbf304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::Value</definition>
        <argsstring>(bool value)</argsstring>
        <name>Value</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="205"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a709821fe15c19a356dc3abc00b8ad292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::Value</definition>
        <argsstring>(const Value &amp;other)</argsstring>
        <name>Value</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="206"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a7743ab953190495bd6639073143f4481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::~Value</definition>
        <argsstring>()</argsstring>
        <name>~Value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="207"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ab245ee01674caee18a91e8cc87c2f7ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
        <definition>Value&amp; Json::JSON_API::operator=</definition>
        <argsstring>(const Value &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="209"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1acd0deaad6c3835fd057f329218f6c78b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::swap</definition>
        <argsstring>(Value &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Swap values. <simplesect kind="note"><para>Currently, comments are intentionally not swapped, for both logic and efficiency. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="213"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a1e05ba0c1b4c635981f7db242f536aa9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref></type>
        <definition>ValueType Json::JSON_API::type</definition>
        <argsstring>() const </argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="215"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a37c9af31151c60153def8e3c53c26fef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::operator&lt;</definition>
        <argsstring>(const Value &amp;other) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="217"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1afe7405443a6a9777e146d7b835532af6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::operator&lt;=</definition>
        <argsstring>(const Value &amp;other) const </argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="218"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a1d58bf0d52f6a5760b5f1e770b8c6c54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::operator&gt;=</definition>
        <argsstring>(const Value &amp;other) const </argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="219"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a18055d5016d673fb207be6518f325b40" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::operator&gt;</definition>
        <argsstring>(const Value &amp;other) const </argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="220"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aa773b3cbd476257324a8579d339b60ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::operator==</definition>
        <argsstring>(const Value &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="222"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ac9b1d8303479e87d9dca80f1971e468e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::operator!=</definition>
        <argsstring>(const Value &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="223"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a98c906aed283705945ea693031f105b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Json::JSON_API::compare</definition>
        <argsstring>(const Value &amp;other)</argsstring>
        <name>compare</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="225"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a56ad69d36b4b27a573b3493e0bf0212a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* Json::JSON_API::asCString</definition>
        <argsstring>() const </argsstring>
        <name>asCString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="227"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a3f32deabbc8f4ed1d9da1a3545babd23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Json::JSON_API::asString</definition>
        <argsstring>() const </argsstring>
        <name>asString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="228"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a1da1c5b1138be15feede099d947ed158" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>Int Json::JSON_API::asInt</definition>
        <argsstring>() const </argsstring>
        <name>asInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="232"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1afb2e6a5c3d381cde5e7e02a1a4641329" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>UInt Json::JSON_API::asUInt</definition>
        <argsstring>() const </argsstring>
        <name>asUInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="233"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a7921fd40211de8aa1b61326c79a58d9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Json::JSON_API::asDouble</definition>
        <argsstring>() const </argsstring>
        <name>asDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="234"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ac5e3e813258a7637b4467c88ca585871" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::asBool</definition>
        <argsstring>() const </argsstring>
        <name>asBool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="235"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a63c0f5de55c4fcd72c6269684885f425" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isNull</definition>
        <argsstring>() const </argsstring>
        <name>isNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="237"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a86a66d68a18c0b152fa31e10b0cb2c95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isBool</definition>
        <argsstring>() const </argsstring>
        <name>isBool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="238"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aa1b6301097515a678d6a744f3de5fc22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isInt</definition>
        <argsstring>() const </argsstring>
        <name>isInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="239"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a1fee24acc606c8332b2940504e479057" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isUInt</definition>
        <argsstring>() const </argsstring>
        <name>isUInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="240"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a0202a62646e9308ea82e560b6295f526" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isIntegral</definition>
        <argsstring>() const </argsstring>
        <name>isIntegral</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="241"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1acfe1475c5adbc1b3f4dd9bcbb8301c8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isDouble</definition>
        <argsstring>() const </argsstring>
        <name>isDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="242"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ab6ff52ba51fd5228a3ed66dbd4efaaa8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isNumeric</definition>
        <argsstring>() const </argsstring>
        <name>isNumeric</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="243"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a17ed6283d9e74a8a078020fd8771f749" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isString</definition>
        <argsstring>() const </argsstring>
        <name>isString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="244"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a6afef1570befb40341239347856d9e59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isArray</definition>
        <argsstring>() const </argsstring>
        <name>isArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="245"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a67e726c5b4ce4a58890cc97ba8b29207" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isObject</definition>
        <argsstring>() const </argsstring>
        <name>isObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="246"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1abc53ac28592be34fea30939b6b4aaf84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isConvertibleTo</definition>
        <argsstring>(ValueType other) const </argsstring>
        <name>isConvertibleTo</name>
        <param>
          <type><ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="248"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a59da16946e6731036931b55a99a75515" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>UInt Json::JSON_API::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Number of values in array or object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="251"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ac4df215181adfe71317a5a378ebca834" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
<para>Return true if empty array, empty object, or null; otherwise, false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="255"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a3c4925561838c0a32698efeea2c983d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::operator!</definition>
        <argsstring>() const </argsstring>
        <name>operator!</name>
        <briefdescription>
<para>Return isNull() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="258"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a797068fda331886f3d122d851d1d1927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove all object members and array elements. <simplesect kind="pre"><para>type() is arrayValue, objectValue, or nullValue </para></simplesect>
<simplesect kind="post"><para>type() is unchanged </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="263"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ab50185f6fb23e943d6af6fbac8ffde7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::resize</definition>
        <argsstring>(UInt size)</argsstring>
        <name>resize</name>
        <param>
          <type>UInt</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resize the array to size elements. New elements are initialized to null. May only be called on nullValue or arrayValue. <simplesect kind="pre"><para>type() is arrayValue or nullValue </para></simplesect>
<simplesect kind="post"><para>type() is arrayValue </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="270"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1afde1c2fbf32013aa59a1cf1d34d772e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
        <definition>Value&amp; Json::JSON_API::operator[]</definition>
        <argsstring>(UInt index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>UInt</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access an array element (zero based index ). If the array contains less than index element, then null value are inserted in the array so that its size is index+1. (You may need to say &apos;value[0u]&apos; to get your compiler to distinguish this from the operator[] which takes a string.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="277"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a5208dd58be0836ad3fdc975eae30d8f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
        <definition>const Value&amp; Json::JSON_API::operator[]</definition>
        <argsstring>(UInt index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>UInt</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access an array element (zero based index ) (You may need to say &apos;value[0u]&apos; to get your compiler to distinguish this from the operator[] which takes a string.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="281"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a9d2d6f0eee92a5f5f5a671a0aecab038" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref></type>
        <definition>Value Json::JSON_API::get</definition>
        <argsstring>(UInt index, const Value &amp;defaultValue) const </argsstring>
        <name>get</name>
        <param>
          <type>UInt</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the array contains at least index+1 elements, returns the element value, otherwise returns defaultValue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="285"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a8b89e8a408b6011c0b91d95a04de4298" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isValidIndex</definition>
        <argsstring>(UInt index) const </argsstring>
        <name>isValidIndex</name>
        <param>
          <type>UInt</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Return true if index &lt; <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a59da16946e6731036931b55a99a75515" kindref="member">size()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="287"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a31921682fc5b1489f9c8c877f713bfba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
        <definition>Value&amp; Json::JSON_API::append</definition>
        <argsstring>(const Value &amp;value)</argsstring>
        <name>append</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Append value to array at the end. </para>        </briefdescription>
        <detaileddescription>
<para>Equivalent to jsonvalue[jsonvalue.size()] = value; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="291"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ad8f864b718e965c32025be4baa6eef1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
        <definition>Value&amp; Json::JSON_API::operator[]</definition>
        <argsstring>(const char *key)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Access an object value by name, create a null member if it does not exist. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="294"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1abe48631bc52b7503787da386a7ecba99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
        <definition>const Value&amp; Json::JSON_API::operator[]</definition>
        <argsstring>(const char *key) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Access an object value by name, returns null if there is no member with that name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="296"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ae9013b28547b7723932674da5fe738d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
        <definition>Value&amp; Json::JSON_API::operator[]</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Access an object value by name, create a null member if it does not exist. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="298"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ae6d008b652a42b7d67d91114193df82b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
        <definition>const Value&amp; Json::JSON_API::operator[]</definition>
        <argsstring>(const std::string &amp;key) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Access an object value by name, returns null if there is no member with that name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="300"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a8e5d70129219a62c3d54e0a230c74523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
        <definition>Value&amp; Json::JSON_API::operator[]</definition>
        <argsstring>(const StaticString &amp;key)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const StaticString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Access an object value by name, create a null member if it does not exist. </para>        </briefdescription>
        <detaileddescription>
<para>If the object as no entry for that name, then the member name used to store the new entry is not duplicated. Example of use: <programlisting><codeline><highlight class="normal"><sp/>Json::Value<sp/>object;</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StaticString<sp/>code(</highlight><highlight class="stringliteral">&quot;code&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[code]<sp/>=<sp/>1234;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="312"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a883d6ce140e5bd2dac32f0321b2f0b96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref></type>
        <definition>Value Json::JSON_API::get</definition>
        <argsstring>(const char *key, const Value &amp;defaultValue) const </argsstring>
        <name>get</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Return the member named key if it exist, defaultValue otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="321"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aa21732e6c5e1eced8a7eaafa00502521" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref></type>
        <definition>Value Json::JSON_API::get</definition>
        <argsstring>(const std::string &amp;key, const Value &amp;defaultValue) const </argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Return the member named key if it exist, defaultValue otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="324"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1adfff71c85ae69604406249612234959c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref></type>
        <definition>Value Json::JSON_API::removeMember</definition>
        <argsstring>(const char *key)</argsstring>
        <name>removeMember</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Remove and return the named member. </para>        </briefdescription>
        <detaileddescription>
<para>Do nothing if it did not exist. <simplesect kind="return"><para>the removed Value, or null. </para></simplesect>
<simplesect kind="pre"><para>type() is objectValue or nullValue </para></simplesect>
<simplesect kind="post"><para>type() is unchanged </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="336"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a9a8efed29e3f58cf60a12a519ab389e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref></type>
        <definition>Value Json::JSON_API::removeMember</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>removeMember</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Same as <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1adfff71c85ae69604406249612234959c" kindref="member">removeMember(const char*)</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="338"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a819238e22ec268c91bfdfdc5b3b5a3eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isMember</definition>
        <argsstring>(const char *key) const </argsstring>
        <name>isMember</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Return true if the object has a member named key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="341"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ad9013e5497326a588f6a964ca7bc84e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isMember</definition>
        <argsstring>(const std::string &amp;key) const </argsstring>
        <name>isMember</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Return true if the object has a member named key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="343"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a0c5199d4810f25527d0fba6833b7b85b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Members</type>
        <definition>Members Json::JSON_API::getMemberNames</definition>
        <argsstring>() const </argsstring>
        <name>getMemberNames</name>
        <briefdescription>
<para>Return a list of the member names. </para>        </briefdescription>
        <detaileddescription>
<para>If null, return an empty list. <simplesect kind="pre"><para>type() is objectValue or nullValue </para></simplesect>
<simplesect kind="post"><para>if type() was nullValue, it remains nullValue </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="354"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aff860343cf603b1710489977991cac53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::setComment</definition>
        <argsstring>(const char *comment, CommentPlacement placement)</argsstring>
        <name>setComment</name>
        <param>
          <type>const char *</type>
          <declname>comment</declname>
        </param>
        <param>
          <type><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref></type>
          <declname>placement</declname>
        </param>
        <briefdescription>
<para>Comments must be //... or /* ... */. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="363"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aa8749c9a1e02179c70a54dd5fe75594c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::setComment</definition>
        <argsstring>(const std::string &amp;comment, CommentPlacement placement)</argsstring>
        <name>setComment</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>comment</declname>
        </param>
        <param>
          <type><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref></type>
          <declname>placement</declname>
        </param>
        <briefdescription>
<para>Comments must be //... or /* ... */. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="366"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1adf2053f4104f527e65d5d2dde6d04b8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::hasComment</definition>
        <argsstring>(CommentPlacement placement) const </argsstring>
        <name>hasComment</name>
        <param>
          <type><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref></type>
          <declname>placement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="367"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1adcc81670e36675e2be93f68f24d1d621" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Json::JSON_API::getComment</definition>
        <argsstring>(CommentPlacement placement) const </argsstring>
        <name>getComment</name>
        <param>
          <type><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref></type>
          <declname>placement</declname>
        </param>
        <briefdescription>
<para>Include delimiters and embedded newlines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="369"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1af39a693bbc2f3f9596dac0d5cd053924" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Json::JSON_API::toStyledString</definition>
        <argsstring>() const </argsstring>
        <name>toStyledString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="371"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a9de7e8069f73c1dbf86f86716bc01e78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_const_iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator Json::JSON_API::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="373"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a64e93247c3079bf3b4aa078a05581391" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_const_iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator Json::JSON_API::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="374"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ae919de999d9edd844b8853660b448db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator" kindref="compound">iterator</ref></type>
        <definition>iterator Json::JSON_API::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="376"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a41f8f58a62416e4da34edb26f8d880c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_iterator" kindref="compound">iterator</ref></type>
        <definition>iterator Json::JSON_API::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="377"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a056236ca82be4a2069b073d679a96593" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Json::JSON_API::~Writer</definition>
        <argsstring>()</argsstring>
        <name>~Writer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="18"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aeb007c2dc036bd1accab064f36e591c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string Json::JSON_API::write</definition>
        <argsstring>(const Value &amp;root)=0</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="20"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a4cd498bc45daeff40b5a9d07bf880822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::FastWriter</definition>
        <argsstring>()</argsstring>
        <name>FastWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="32"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a8f72d6ab8133781a5a694e852b8c39f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Json::JSON_API::~FastWriter</definition>
        <argsstring>()</argsstring>
        <name>~FastWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="33" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a4a9b42293fcfb7bb8415f4b23f44f353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::enableYAMLCompatibility</definition>
        <argsstring>()</argsstring>
        <name>enableYAMLCompatibility</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="35"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1acfac8c5774ac05e3fd04f4a8b8a59785" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Json::JSON_API::write</definition>
        <argsstring>(const Value &amp;root)</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="38"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a5c86edefaffa6a79ef2e2dba5a1c359c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::StyledWriter</definition>
        <argsstring>()</argsstring>
        <name>StyledWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="68"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ae2f2034aaa5582578ad471e4d3b9e6da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Json::JSON_API::~StyledWriter</definition>
        <argsstring>()</argsstring>
        <name>~StyledWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="69" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1acfac8c5774ac05e3fd04f4a8b8a59785" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Json::JSON_API::write</definition>
        <argsstring>(const Value &amp;root)</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
<para>Serialize a Value in <ulink url="http://www.json.org">JSON</ulink> format. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to serialize. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String containing the JSON document that represents the root value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="76"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aad71cf3227df61afb2b7402ab03eba2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::StyledStreamWriter</definition>
        <argsstring>(std::string indentation=&quot;\t&quot;)</argsstring>
        <name>StyledStreamWriter</name>
        <param>
          <type>std::string</type>
          <declname>indentation</declname>
          <defval>&quot;\t&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aedd23804822038d83051f849ce9a6b69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Json::JSON_API::~StyledStreamWriter</definition>
        <argsstring>()</argsstring>
        <name>~StyledStreamWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="126" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ae61ccd20341537c6f7b7212097db574d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::write</definition>
        <argsstring>(std::ostream &amp;out, const Value &amp;root)</argsstring>
        <name>write</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
<para>Serialize a Value in <ulink url="http://www.json.org">JSON</ulink> format. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream to write to. (Can be ostringstream, e.g.) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to serialize. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>There is no point in deriving from Writer, since write() should not return a value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="134"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a5793648e58a78e806e05aa4273788724" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::expectToken</definition>
        <argsstring>(TokenType type, Token &amp;token, const char *message)</argsstring>
        <name>expectToken</name>
        <param>
          <type>TokenType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>Token &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="110"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a48a888d808ac32daf150ae5a85441f8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::readToken</definition>
        <argsstring>(Token &amp;token)</argsstring>
        <name>readToken</name>
        <param>
          <type>Token &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="111"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a15dd10b8c6e49c10cc9f3ec8ba96504e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::skipSpaces</definition>
        <argsstring>()</argsstring>
        <name>skipSpaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="112"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aa8d05e177067cf94c0e03807ed5b23cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::match</definition>
        <argsstring>(Location pattern, int patternLength)</argsstring>
        <name>match</name>
        <param>
          <type>Location</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>int</type>
          <declname>patternLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="114"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a1873cac01be4dee42e9d71585a9e2962" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::readComment</definition>
        <argsstring>()</argsstring>
        <name>readComment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a38b7fe576a2a01442909a4eeb94d9889" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::readCStyleComment</definition>
        <argsstring>()</argsstring>
        <name>readCStyleComment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="116"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aae200c5ce1733a5e016509b94ffbe0a6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::readCppStyleComment</definition>
        <argsstring>()</argsstring>
        <name>readCppStyleComment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1af86ccc28f33e415368148dabec68e407" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::readString</definition>
        <argsstring>()</argsstring>
        <name>readString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="118"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ac6af37574b90a91715841e4798a0cf0d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::readNumber</definition>
        <argsstring>()</argsstring>
        <name>readNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="119"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a06899e17cafb82b4d4a36c1f854b9c49" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::readValue</definition>
        <argsstring>()</argsstring>
        <name>readValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a81eb9aac78f2ae0ba94b85a037f59884" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::readObject</definition>
        <argsstring>(Token &amp;token)</argsstring>
        <name>readObject</name>
        <param>
          <type>Token &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="121"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a4983743558cc624e579a0d82c408e9ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::readArray</definition>
        <argsstring>(Token &amp;token)</argsstring>
        <name>readArray</name>
        <param>
          <type>Token &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="122"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a9f2d1eae63ce302ef22938acf9f4a66d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::decodeNumber</definition>
        <argsstring>(Token &amp;token)</argsstring>
        <name>decodeNumber</name>
        <param>
          <type>Token &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="123"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a1db41a421df83dc643c3db883b383e46" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::decodeString</definition>
        <argsstring>(Token &amp;token)</argsstring>
        <name>decodeString</name>
        <param>
          <type>Token &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="124"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a27bf7924727370d79f1d873a4ac4e697" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::decodeString</definition>
        <argsstring>(Token &amp;token, std::string &amp;decoded)</argsstring>
        <name>decodeString</name>
        <param>
          <type>Token &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>decoded</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a9f24fe3ae0646184cc52a4f8edb8643f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::decodeDouble</definition>
        <argsstring>(Token &amp;token)</argsstring>
        <name>decodeDouble</name>
        <param>
          <type>Token &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="126"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a2eb3703710214dcea69921447bafdb53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::decodeUnicodeCodePoint</definition>
        <argsstring>(Token &amp;token, Location &amp;current, Location end, unsigned int &amp;unicode)</argsstring>
        <name>decodeUnicodeCodePoint</name>
        <param>
          <type>Token &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>Location &amp;</type>
          <declname>current</declname>
        </param>
        <param>
          <type>Location</type>
          <declname>end</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>unicode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="130"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a23677fa20ec1633d3a1bd41e1d6d7261" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::decodeUnicodeEscapeSequence</definition>
        <argsstring>(Token &amp;token, Location &amp;current, Location end, unsigned int &amp;unicode)</argsstring>
        <name>decodeUnicodeEscapeSequence</name>
        <param>
          <type>Token &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>Location &amp;</type>
          <declname>current</declname>
        </param>
        <param>
          <type>Location</type>
          <declname>end</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>unicode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="134"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a2d7c25ca0c970ab70b75b224d1ae1a7f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::addError</definition>
        <argsstring>(const std::string &amp;message, Token &amp;token, Location extra=0)</argsstring>
        <name>addError</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>Token &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>Location</type>
          <declname>extra</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="137"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ab5945e589075de39089a08da6e092020" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::recoverFromError</definition>
        <argsstring>(TokenType skipUntilToken)</argsstring>
        <name>recoverFromError</name>
        <param>
          <type>TokenType</type>
          <declname>skipUntilToken</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="138"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ab15c60cb1f8ca7701e6684bbef7b4208" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::addErrorAndRecover</definition>
        <argsstring>(const std::string &amp;message, Token &amp;token, TokenType skipUntilToken)</argsstring>
        <name>addErrorAndRecover</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>Token &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>TokenType</type>
          <declname>skipUntilToken</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="141"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a636efe137264450dcbd54e449c7ffc4a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::skipUntilSpace</definition>
        <argsstring>()</argsstring>
        <name>skipUntilSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="142"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aa3eda78fe61a892044d2ada771ba4e1c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
        <definition>Value&amp; Json::JSON_API::currentValue</definition>
        <argsstring>()</argsstring>
        <name>currentValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="143"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a8a7a7678c6c0616ff9f5c2ebfb71de69" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Char</type>
        <definition>Char Json::JSON_API::getNextChar</definition>
        <argsstring>()</argsstring>
        <name>getNextChar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="144"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1af1946bc87ada272f5e91362552db0477" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::getLocationLineAndColumn</definition>
        <argsstring>(Location location, int &amp;line, int &amp;column) const </argsstring>
        <name>getLocationLineAndColumn</name>
        <param>
          <type>Location</type>
          <declname>location</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="147"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a38ab8f90a9a5a914ef876afb19d36115" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Json::JSON_API::getLocationLineAndColumn</definition>
        <argsstring>(Location location) const </argsstring>
        <name>getLocationLineAndColumn</name>
        <param>
          <type>Location</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="148"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a748be9a0fe02d8476e9be75d4cbf02c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::addComment</definition>
        <argsstring>(Location begin, Location end, CommentPlacement placement)</argsstring>
        <name>addComment</name>
        <param>
          <type>Location</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Location</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref></type>
          <declname>placement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="151"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1adecc457a62377c13d3d60806536f92ff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::skipCommentTokens</definition>
        <argsstring>(Token &amp;token)</argsstring>
        <name>skipCommentTokens</name>
        <param>
          <type>Token &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/reader.h" line="152"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aa55543729948ff8d64b6fc6cb7cc2a3d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
        <definition>Value&amp; Json::JSON_API::resolveReference</definition>
        <argsstring>(const char *key, bool isStatic)</argsstring>
        <name>resolveReference</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isStatic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/value.h" line="381"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a8d70af3925a1f51795a6c5b7443f83ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::writeValue</definition>
        <argsstring>(const Value &amp;value)</argsstring>
        <name>writeValue</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="41"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a8d70af3925a1f51795a6c5b7443f83ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::writeValue</definition>
        <argsstring>(const Value &amp;value)</argsstring>
        <name>writeValue</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="79"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a5689d02f8b45ce4380d67aec3063320c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::writeArrayValue</definition>
        <argsstring>(const Value &amp;value)</argsstring>
        <name>writeArrayValue</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="80"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ade4d26877749387cddb9775fe67e4c1c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isMultineArray</definition>
        <argsstring>(const Value &amp;value)</argsstring>
        <name>isMultineArray</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="81"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a78da7b94ff2d70f73f55c53381e6e620" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::pushValue</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>pushValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aeb24742b60657c9c3089a1ba397e20a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::writeIndent</definition>
        <argsstring>()</argsstring>
        <name>writeIndent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="83"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a22273c75778f083d2295507723504030" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::writeWithIndent</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>writeWithIndent</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="84"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ac12a144e53729cc3428e36abd678de29" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::indent</definition>
        <argsstring>()</argsstring>
        <name>indent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="85"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a0b4df49db703c25d8f2ad11ae0a0d8d2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::unindent</definition>
        <argsstring>()</argsstring>
        <name>unindent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="86"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a5895acf55bab2ad2c5b1614f8c751014" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::writeCommentBeforeValue</definition>
        <argsstring>(const Value &amp;root)</argsstring>
        <name>writeCommentBeforeValue</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="87"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a95c93c80f20ad9b605fb26391048711a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::writeCommentAfterValueOnSameLine</definition>
        <argsstring>(const Value &amp;root)</argsstring>
        <name>writeCommentAfterValueOnSameLine</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="88"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ac0b69507b90f963708d822b064e65ed4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::hasCommentForValue</definition>
        <argsstring>(const Value &amp;value)</argsstring>
        <name>hasCommentForValue</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="89"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a8d70af3925a1f51795a6c5b7443f83ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::writeValue</definition>
        <argsstring>(const Value &amp;value)</argsstring>
        <name>writeValue</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="137"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a5689d02f8b45ce4380d67aec3063320c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::writeArrayValue</definition>
        <argsstring>(const Value &amp;value)</argsstring>
        <name>writeArrayValue</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="138"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ade4d26877749387cddb9775fe67e4c1c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::isMultineArray</definition>
        <argsstring>(const Value &amp;value)</argsstring>
        <name>isMultineArray</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="139"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a78da7b94ff2d70f73f55c53381e6e620" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::pushValue</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>pushValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="140"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1aeb24742b60657c9c3089a1ba397e20a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::writeIndent</definition>
        <argsstring>()</argsstring>
        <name>writeIndent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="141"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a22273c75778f083d2295507723504030" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::writeWithIndent</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>writeWithIndent</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="142"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ac12a144e53729cc3428e36abd678de29" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::indent</definition>
        <argsstring>()</argsstring>
        <name>indent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="143"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a0b4df49db703c25d8f2ad11ae0a0d8d2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::unindent</definition>
        <argsstring>()</argsstring>
        <name>unindent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="144"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a5895acf55bab2ad2c5b1614f8c751014" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::writeCommentBeforeValue</definition>
        <argsstring>(const Value &amp;root)</argsstring>
        <name>writeCommentBeforeValue</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="145"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1a95c93c80f20ad9b605fb26391048711a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::JSON_API::writeCommentAfterValueOnSameLine</definition>
        <argsstring>(const Value &amp;root)</argsstring>
        <name>writeCommentAfterValueOnSameLine</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="146"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1ac0b69507b90f963708d822b064e65ed4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::JSON_API::hasCommentForValue</definition>
        <argsstring>(const Value &amp;value)</argsstring>
        <name>hasCommentForValue</name>
        <param>
          <type>const <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="147"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1afff0ecce21af8bb0b63ac7c2595464b2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string Json::JSON_API::normalizeEOL</definition>
        <argsstring>(const std::string &amp;text)</argsstring>
        <name>normalizeEOL</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="protocol_json_1_1_j_s_o_n___a_p_i_1afff0ecce21af8bb0b63ac7c2595464b2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string Json::JSON_API::normalizeEOL</definition>
        <argsstring>(const std::string &amp;text)</argsstring>
        <name>normalizeEOL</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/writer.h" line="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Configuration passed to reader and writer. This configuration object can be used to force the Reader or Writer to behave in a standard conforming way. </para>    </briefdescription>
    <detaileddescription>
<para>Writes a Value in <ulink url="http://www.json.org">JSON</ulink> format in a human friendly way, to a stream rather than to a string.</para><para>Writes a Value in <ulink url="http://www.json.org">JSON</ulink> format in a human friendly way.</para><para>Outputs a Value in <ulink url="http://www.json.org">JSON</ulink> format without formatting (not human friendly).</para><para>Abstract class for writers.</para><para>Represents a <ulink url="http://www.json.org">JSON</ulink> value.</para><para>Lightweight wrapper to tag static string.</para><para>Unserialize a <ulink url="http://www.json.org">JSON</ulink> document into a Value.</para><para><verbatim> </verbatim></para><para>Value constructor and objectValue member assignement takes advantage of the StaticString and avoid the cost of string duplication when storing the string or the member name.</para><para>Example of usage: <programlisting><codeline><highlight class="normal"><sp/>Json::Value<sp/>aValue(<sp/>StaticString(</highlight><highlight class="stringliteral">&quot;some<sp/>text&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/>Json::Value<sp/>object;</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StaticString<sp/>code(</highlight><highlight class="stringliteral">&quot;code&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[code]<sp/>=<sp/>1234;</highlight></codeline>
</programlisting></para><para>This class is a discriminated union wrapper that can represents a:<itemizedlist>
<listitem><para>signed integer [range: Value::minInt - Value::maxInt]</para></listitem><listitem><para>unsigned integer (range: 0 - Value::maxUInt)</para></listitem><listitem><para>double</para></listitem><listitem><para>UTF-8 string</para></listitem><listitem><para>boolean</para></listitem><listitem><para>&apos;null&apos;</para></listitem><listitem><para>an ordered list of Value</para></listitem><listitem><para>collection of name/value pairs (javascript object)</para></listitem></itemizedlist>
</para><para>The type of the held value is represented by a <ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4e" kindref="member">ValueType</ref> and can be obtained using type().</para><para>values of an <ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref> or <ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref> can be accessed using <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1afde1c2fbf32013aa59a1cf1d34d772e4" kindref="member">operator[]()</ref> methods. Non const methods will automatically create the a <ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref> element if it does not exist. The sequence of an <ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref> will be automatically resize and initialized with <ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4ea7d9899633b4409bd3fc107e6737f8391" kindref="member">nullValue</ref>. <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1ab50185f6fb23e943d6af6fbac8ffde7a" kindref="member">resize()</ref> can be used to enlarge or truncate an <ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eadc8f264f36b55b063c78126b335415f4" kindref="member">arrayValue</ref>.</para><para>The <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a9d2d6f0eee92a5f5f5a671a0aecab038" kindref="member">get()</ref> methods can be used to obtanis default value in the case the required element does not exist.</para><para>It is possible to iterate over the list of a <ref refid="namespace_json_1a7d654b75c16a57007925868e38212b4eae8386dcfc36d1ae897745f7b4f77a1f6" kindref="member">objectValue</ref> values using the <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a0c5199d4810f25527d0fba6833b7b85b" kindref="member">getMemberNames()</ref> method.</para><para>The JSON document is written in a single line. It is not intended for &apos;human&apos; consumption, but may be usefull to support feature such as RPC where bandwith is limited. <simplesect kind="see"><para><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a8d5594b46204fb65661a8c96c015ea54" kindref="member">Reader</ref>, <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref></para></simplesect>
The rules for line break and indent are as follow:<itemizedlist>
<listitem><para>Object value:<itemizedlist>
<listitem><para>if empty then print {} without indent and line break</para></listitem><listitem><para>if not empty the print &apos;{&apos;, line break &amp; indent, print one value per line and then unindent and line break and print &apos;}&apos;.</para></listitem></itemizedlist>
</para></listitem><listitem><para>Array value:<itemizedlist>
<listitem><para>if empty then print [] without indent and line break</para></listitem><listitem><para>if the array contains no object value, empty array or some other value types, and all the values fit on one lines, then print the array on a single line.</para></listitem><listitem><para>otherwise, it the values do not fit on one line, or the array contains object or non empty array, then print one value per line.</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para><para>If the Value have comments then they are outputed according to their <ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref>.</para><para><simplesect kind="see"><para><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a8d5594b46204fb65661a8c96c015ea54" kindref="member">Reader</ref>, <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref>, Value::setComment()</para></simplesect>
The rules for line break and indent are as follow:<itemizedlist>
<listitem><para>Object value:<itemizedlist>
<listitem><para>if empty then print {} without indent and line break</para></listitem><listitem><para>if not empty the print &apos;{&apos;, line break &amp; indent, print one value per line and then unindent and line break and print &apos;}&apos;.</para></listitem></itemizedlist>
</para></listitem><listitem><para>Array value:<itemizedlist>
<listitem><para>if empty then print [] without indent and line break</para></listitem><listitem><para>if the array contains no object value, empty array or some other value types, and all the values fit on one lines, then print the array on a single line.</para></listitem><listitem><para>otherwise, it the values do not fit on one line, or the array contains object or non empty array, then print one value per line.</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para><para>If the Value have comments then they are outputed according to their <ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indentation</parametername>
</parameternamelist>
<parameterdescription>
<para>Each level will be indented by this amount extra. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a8d5594b46204fb65661a8c96c015ea54" kindref="member">Reader</ref>, <ref refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" kindref="member">Value</ref>, Value::setComment() </para></simplesect>
</para>    </detaileddescription>
    <location file="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/features.h" line="13" bodyfile="/Users/ericgallager/Tiggit/libs/jsoncpp/include/json/features.h" bodystart="12" bodyend="38"/>
    <listofallmembers>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a12ef3b78e9d41df3dcac2301ed775e00" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>addChildValues_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a748be9a0fe02d8476e9be75d4cbf02c4" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>addComment</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a2d7c25ca0c970ab70b75b224d1ae1a7f" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>addError</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ab15c60cb1f8ca7701e6684bbef7b4208" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>addErrorAndRecover</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a597c6015488c43c485760edda8cfdf5c" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>all</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1adee6b57e03696111f43a63bf7fd061df" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>allocated_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a647b2843efe8a0a69353ab915527eafe" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>allowComments_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a31921682fc5b1489f9c8c877f713bfba" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>append</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ad35740d876f51395815a4fa8a353859f" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>ArrayIndex</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ac5e3e813258a7637b4467c88ca585871" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>asBool</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a56ad69d36b4b27a573b3493e0bf0212a" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>asCString</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a7921fd40211de8aa1b61326c79a58d9e" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>asDouble</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a1da1c5b1138be15feede099d947ed158" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>asInt</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3f32deabbc8f4ed1d9da1a3545babd23" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>asString</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1afb2e6a5c3d381cde5e7e02a1a4641329" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>asUInt</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a9de7e8069f73c1dbf86f86716bc01e78" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>begin</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ae919de999d9edd844b8853660b448db4" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>begin</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aaa0ac9885fe640a3b325f1ddb635ca75" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>begin_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1adc66a5168f8d6578974acfb0d8f5a1e6" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>c_str</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aaa40995a01a083f11fdb518ab1546366" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Char</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a22fb69662c4b38f0bc786fa6c521cd96" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>ChildValues</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a22fb69662c4b38f0bc786fa6c521cd96" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>ChildValues</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ae2f833c27cfe1781c9310b636753b0c7" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>childValues_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a797068fda331886f3d122d851d1d1927" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>clear</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aa4075c3bc6c013c56205e9afa2f3f669" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>collectComments_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a648a4a1df8f56f17a46f7099475cf570" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>comments_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a0bb4b295b0c27a9615dc800056086ac3" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>commentsBefore_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a98c906aed283705945ea693031f105b3" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>compare</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a8f629afe15b29cf656d532bb9b4509e4" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>const_iterator</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a9ac13ed9bd17d9f33cbfba7b9bdc815a" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>current_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aa3eda78fe61a892044d2ada771ba4e1c" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>currentValue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a9f24fe3ae0646184cc52a4f8edb8643f" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>decodeDouble</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a9f2d1eae63ce302ef22938acf9f4a66d" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>decodeNumber</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a1db41a421df83dc643c3db883b383e46" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>decodeString</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a27bf7924727370d79f1d873a4ac4e697" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>decodeString</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a2eb3703710214dcea69921447bafdb53" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>decodeUnicodeCodePoint</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a23677fa20ec1633d3a1bd41e1d6d7261" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>decodeUnicodeEscapeSequence</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a739e7eb36b3ec600098552ac41f6694e" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>document_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a0f922489b81e313f6b00e0e73fe7d424" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>document_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ac4df215181adfe71317a5a378ebca834" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>empty</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a4a9b42293fcfb7bb8415f4b23f44f353" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>enableYAMLCompatibility</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a64e93247c3079bf3b4aa078a05581391" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>end</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a41f8f58a62416e4da34edb26f8d880c1" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>end</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a917b0105bd7ca5d4ecf4c0224b19b651" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>end_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a618935c31ecce0bc20781f4cc4941993" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>Errors</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3cded0478b67af467cc28672b1d31cc7" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>errors_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a5793648e58a78e806e05aa4273788724" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>expectToken</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a4cd498bc45daeff40b5a9d07bf880822" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>FastWriter</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ad689444ef42491b89324975696f0ed58" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Features</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a8b4220b31ddb5fd914835948530976a2" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>features_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a9d2d6f0eee92a5f5f5a671a0aecab038" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>get</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a883d6ce140e5bd2dac32f0321b2f0b96" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>get</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aa21732e6c5e1eced8a7eaafa00502521" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>get</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1adcc81670e36675e2be93f68f24d1d621" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>getComment</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ad2995c11c6aeb7719af179c0eacb6c85" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>getFormatedErrorMessages</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1af1946bc87ada272f5e91362552db0477" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>getLocationLineAndColumn</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a38ab8f90a9a5a914ef876afb19d36115" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>getLocationLineAndColumn</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a0c5199d4810f25527d0fba6833b7b85b" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>getMemberNames</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a8a7a7678c6c0616ff9f5c2ebfb71de69" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>getNextChar</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1adf2053f4104f527e65d5d2dde6d04b8a" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>hasComment</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ac0b69507b90f963708d822b064e65ed4" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>hasCommentForValue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ac0b69507b90f963708d822b064e65ed4" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>hasCommentForValue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ac12a144e53729cc3428e36abd678de29" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>indent</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ac12a144e53729cc3428e36abd678de29" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>indent</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ad4f19ad2c841690576eadfb42cafa039" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>indentation_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ad12c896fb698a0f3b0af2ca6f341225f" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>indentSize_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aeb8eb61e51b97303f2d5b78aee21f912" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>indentString_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1abed1de75991fb8d5afe4a4854def6293" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Int</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a6afef1570befb40341239347856d9e59" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isArray</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a86a66d68a18c0b152fa31e10b0cb2c95" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isBool</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1abc53ac28592be34fea30939b6b4aaf84" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isConvertibleTo</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1acfe1475c5adbc1b3f4dd9bcbb8301c8d" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isDouble</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aa1b6301097515a678d6a744f3de5fc22" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isInt</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a0202a62646e9308ea82e560b6295f526" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isIntegral</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a819238e22ec268c91bfdfdc5b3b5a3eb" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isMember</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ad9013e5497326a588f6a964ca7bc84e9" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isMember</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ade4d26877749387cddb9775fe67e4c1c" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>isMultineArray</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ade4d26877749387cddb9775fe67e4c1c" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>isMultineArray</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a63c0f5de55c4fcd72c6269684885f425" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isNull</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ab6ff52ba51fd5228a3ed66dbd4efaaa8" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isNumeric</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a67e726c5b4ce4a58890cc97ba8b29207" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isObject</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a17ed6283d9e74a8a078020fd8771f749" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isString</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a1fee24acc606c8332b2940504e479057" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isUInt</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a8b89e8a408b6011c0b91d95a04de4298" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>isValidIndex</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a682f4e1bbed287f1ab85ee0912d68b3e" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>iterator</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a045f4f0f3aa8e40aaab0629fd5fed602" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>lastValue_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ace28ad0599793b726d56c5acb2a49edc" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>lastValueEnd_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ac78c2a0788236409a83cd3fbb15cc27e" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Location</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aa8d05e177067cf94c0e03807ed5b23cf" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>match</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a34e3ac05230d2b91916958f036b4badd" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>maxInt</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3cdaa96e9bbf12202d61005e87f70697" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>maxUInt</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a69a83395b9a01ee28dbc5026a322ad56" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Members</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3c6b7f48958ebf357522e14c82f21a90" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>minInt</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a958e0c34279abb7523fec2f25263d729" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>Nodes</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a51ad6d6b3a5ea20cf9137f888966daef" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>nodes_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1afff0ecce21af8bb0b63ac7c2595464b2" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>normalizeEOL</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1afff0ecce21af8bb0b63ac7c2595464b2" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>normalizeEOL</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ac93090d15c633f942a091a876dcb8f9c" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>null</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a10657a8f9bc6f360dae4016fe8cc7650" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>ObjectValues</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ad2611e5ce83556c555cdc40ef5f52c8e" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator const char *</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3c4925561838c0a32698efeea2c983d6" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator!</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ac9b1d8303479e87d9dca80f1971e468e" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator!=</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a37c9af31151c60153def8e3c53c26fef" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator&lt;</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1afe7405443a6a9777e146d7b835532af6" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator&lt;=</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ab245ee01674caee18a91e8cc87c2f7ac" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator=</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aa773b3cbd476257324a8579d339b60ae" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator==</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a18055d5016d673fb207be6518f325b40" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator&gt;</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a1d58bf0d52f6a5760b5f1e770b8c6c54" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator&gt;=</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1afde1c2fbf32013aa59a1cf1d34d772e4" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator[]</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a5208dd58be0836ad3fdc975eae30d8f2" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator[]</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ad8f864b718e965c32025be4baa6eef1a" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator[]</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1abe48631bc52b7503787da386a7ecba99" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator[]</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ae9013b28547b7723932674da5fe738d6" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator[]</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ae6d008b652a42b7d67d91114193df82b" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator[]</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a8e5d70129219a62c3d54e0a230c74523" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>operator[]</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ae59036936fda704af5ff0dd27d759d61" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>parse</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a30735cd943a02164996275abe1712224" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>parse</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a54923dcea65f8fc8d91f5625e7aa3cc7" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>parse</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a78da7b94ff2d70f73f55c53381e6e620" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>pushValue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a78da7b94ff2d70f73f55c53381e6e620" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>pushValue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a4983743558cc624e579a0d82c408e9ed" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>readArray</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a1873cac01be4dee42e9d71585a9e2962" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>readComment</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aae200c5ce1733a5e016509b94ffbe0a6" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>readCppStyleComment</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a38b7fe576a2a01442909a4eeb94d9889" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>readCStyleComment</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a8d5594b46204fb65661a8c96c015ea54" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Reader</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ada43ccb4bc15d260528629cb7aebb8ff" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Reader</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ac6af37574b90a91715841e4798a0cf0d" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>readNumber</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a81eb9aac78f2ae0ba94b85a037f59884" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>readObject</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1af86ccc28f33e415368148dabec68e407" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>readString</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a48a888d808ac32daf150ae5a85441f8b" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>readToken</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a06899e17cafb82b4d4a36c1f854b9c49" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>readValue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ab5945e589075de39089a08da6e092020" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>recoverFromError</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1adfff71c85ae69604406249612234959c" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>removeMember</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a9a8efed29e3f58cf60a12a519ab389e3" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>removeMember</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ab50185f6fb23e943d6af6fbac8ffde7a" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>resize</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aa55543729948ff8d64b6fc6cb7cc2a3d" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>resolveReference</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a95ca65dc659117738cb24c121ff9ce87" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>rightMargin_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aff860343cf603b1710489977991cac53" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>setComment</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aa8749c9a1e02179c70a54dd5fe75594c" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>setComment</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a59da16946e6731036931b55a99a75515" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>size</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1adecc457a62377c13d3d60806536f92ff" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>skipCommentTokens</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a15dd10b8c6e49c10cc9f3ec8ba96504e" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>skipSpaces</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a636efe137264450dcbd54e449c7ffc4a" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>skipUntilSpace</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1afdc014f5f606d49f78bae1467f6b28d5" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>StaticString</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1abf19bda5d8c7ae59ac29d4cbe3343e6b" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>str_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1af354da64e0f08333590de851180e1b41" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>strictMode</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a309a273d34b98d60ba6479343f4974e3" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>strictRoot_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aad71cf3227df61afb2b7402ab03eba2e" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>StyledStreamWriter</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a5c86edefaffa6a79ef2e2dba5a1c359c" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>StyledWriter</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1acd0deaad6c3835fd057f329218f6c78b" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>swap</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437ad74e3cba39004934e5ad4ea54956b86b" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenArrayBegin</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a13bde27eea60377968e7abadf3dcfada" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenArrayEnd</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437ab31f0f4fc3853995ed142b219c78de49" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenArraySeparator</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437ace85506cf139917136422872856ebe13" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenComment</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a958c81b8f87d8b3131278388a9010a93" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenEndOfStream</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437adfbb88efb3b884477b71999d51fc8e49" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenError</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a30cfd7d1f253df03e2c356358ffe50f3" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenFalse</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a81b9a5adb576b71d48945f0e9e1f238e" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenMemberSeparator</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437ac64d3219a888c9324c7517cd226776f6" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenNull</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a8ecd1dcf97b2c253e3c875056a387301" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenNumber</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a6d001037293238d0c43804c79711a25a" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenObjectBegin</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a9c8dd56f830ba2bf5c7f8a27fa016fb3" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenObjectEnd</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437a92633e5c58823ec8bdbe4af1b7f33221" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenString</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437ac1aeb4ca0f83f3b69a273af561ede753" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>tokenTrue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aea7c1a046fb9921b72676b519d1b0437" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>TokenType</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1af39a693bbc2f3f9596dac0d5cd053924" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>toStyledString</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a1e05ba0c1b4c635981f7db242f536aa9" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>type</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a1f7a428d732e68aabca929ee461906ed" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>type_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a065237d47a9dffbf14ad04842ff50586" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>UInt</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a0b4df49db703c25d8f2ad11ae0a0d8d2" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>unindent</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a0b4df49db703c25d8f2ad11ae0a0d8d2" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>unindent</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a3a85c4423131080eb9300546d6130dfd" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Value</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ae81d6899887463e4fe0bdad8b06e1214" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Value</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1af3c698ea7116db3d779d92ad50feb2ee" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Value</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1abd1299b9965e82812a6494522cc3c804" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Value</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a87d184b04b4759a059f396df660834b9" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Value</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ae288a97eaaf54fe2d16f3b73d060d22a" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Value</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a5514e83243c886dbb4594877ada2ce05" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Value</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a58fa65d882bdcdea20e5764f8f0d2292" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Value</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a6266f6b439a379762e4ed9ee05dbf304" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Value</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a709821fe15c19a356dc3abc00b8ad292" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>Value</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a2b920a9d8fece23404a4b83d832d53cc" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>value_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ad016df56489e5d360735457afba2f649" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>ValueIteratorBase</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aeb007c2dc036bd1accab064f36e591c9" prot="public" virt="pure-virtual"><scope>Json::JSON_API</scope><name>write</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1acfac8c5774ac05e3fd04f4a8b8a59785" prot="public" virt="virtual"><scope>Json::JSON_API</scope><name>write</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1acfac8c5774ac05e3fd04f4a8b8a59785" prot="public" virt="virtual"><scope>Json::JSON_API</scope><name>write</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ae61ccd20341537c6f7b7212097db574d" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>write</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a5689d02f8b45ce4380d67aec3063320c" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>writeArrayValue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a5689d02f8b45ce4380d67aec3063320c" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>writeArrayValue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a95c93c80f20ad9b605fb26391048711a" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>writeCommentAfterValueOnSameLine</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a95c93c80f20ad9b605fb26391048711a" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>writeCommentAfterValueOnSameLine</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a5895acf55bab2ad2c5b1614f8c751014" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>writeCommentBeforeValue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a5895acf55bab2ad2c5b1614f8c751014" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>writeCommentBeforeValue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aeb24742b60657c9c3089a1ba397e20a7" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>writeIndent</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aeb24742b60657c9c3089a1ba397e20a7" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>writeIndent</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a8d70af3925a1f51795a6c5b7443f83ad" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>writeValue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a8d70af3925a1f51795a6c5b7443f83ad" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>writeValue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a8d70af3925a1f51795a6c5b7443f83ad" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>writeValue</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a22273c75778f083d2295507723504030" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>writeWithIndent</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a22273c75778f083d2295507723504030" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>writeWithIndent</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a33a745033d492318b405f942c20b71fc" prot="private" virt="non-virtual"><scope>Json::JSON_API</scope><name>yamlCompatiblityEnabled_</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a8f72d6ab8133781a5a694e852b8c39f1" prot="public" virt="virtual"><scope>Json::JSON_API</scope><name>~FastWriter</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1aedd23804822038d83051f849ce9a6b69" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>~StyledStreamWriter</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1ae2f2034aaa5582578ad471e4d3b9e6da" prot="public" virt="virtual"><scope>Json::JSON_API</scope><name>~StyledWriter</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a7743ab953190495bd6639073143f4481" prot="public" virt="non-virtual"><scope>Json::JSON_API</scope><name>~Value</name></member>
      <member refid="protocol_json_1_1_j_s_o_n___a_p_i_1a056236ca82be4a2069b073d679a96593" prot="public" virt="virtual"><scope>Json::JSON_API</scope><name>~Writer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
